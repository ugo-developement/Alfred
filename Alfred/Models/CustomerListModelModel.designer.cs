#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Alfred.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="TestDB")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::Alfred.Properties.Settings.Default.TestDBConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _CustID;
		
		private string _CustName;
		
		private System.DateTime _LastSeen;
		
		private decimal _TotalNoOfOrders;
		
		private decimal _BasketAvg;
		
		private decimal _PriceAvg;
		
		private string _CustStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustIDChanging(decimal value);
    partial void OnCustIDChanged();
    partial void OnCustNameChanging(string value);
    partial void OnCustNameChanged();
    partial void OnLastSeenChanging(System.DateTime value);
    partial void OnLastSeenChanged();
    partial void OnTotalNoOfOrdersChanging(decimal value);
    partial void OnTotalNoOfOrdersChanged();
    partial void OnBasketAvgChanging(decimal value);
    partial void OnBasketAvgChanged();
    partial void OnPriceAvgChanging(decimal value);
    partial void OnPriceAvgChanged();
    partial void OnCustStatusChanging(string value);
    partial void OnCustStatusChanged();
    #endregion
		
		public Customer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustID", DbType="Decimal(9,0) NOT NULL", IsPrimaryKey=true)]
		public decimal CustID
		{
			get
			{
				return this._CustID;
			}
			set
			{
				if ((this._CustID != value))
				{
					this.OnCustIDChanging(value);
					this.SendPropertyChanging();
					this._CustID = value;
					this.SendPropertyChanged("CustID");
					this.OnCustIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CustName
		{
			get
			{
				return this._CustName;
			}
			set
			{
				if ((this._CustName != value))
				{
					this.OnCustNameChanging(value);
					this.SendPropertyChanging();
					this._CustName = value;
					this.SendPropertyChanged("CustName");
					this.OnCustNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastSeen", DbType="Date NOT NULL")]
		public System.DateTime LastSeen
		{
			get
			{
				return this._LastSeen;
			}
			set
			{
				if ((this._LastSeen != value))
				{
					this.OnLastSeenChanging(value);
					this.SendPropertyChanging();
					this._LastSeen = value;
					this.SendPropertyChanged("LastSeen");
					this.OnLastSeenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalNoOfOrders", DbType="Decimal(18,0) NOT NULL")]
		public decimal TotalNoOfOrders
		{
			get
			{
				return this._TotalNoOfOrders;
			}
			set
			{
				if ((this._TotalNoOfOrders != value))
				{
					this.OnTotalNoOfOrdersChanging(value);
					this.SendPropertyChanging();
					this._TotalNoOfOrders = value;
					this.SendPropertyChanged("TotalNoOfOrders");
					this.OnTotalNoOfOrdersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BasketAvg", DbType="Decimal(18,0) NOT NULL")]
		public decimal BasketAvg
		{
			get
			{
				return this._BasketAvg;
			}
			set
			{
				if ((this._BasketAvg != value))
				{
					this.OnBasketAvgChanging(value);
					this.SendPropertyChanging();
					this._BasketAvg = value;
					this.SendPropertyChanged("BasketAvg");
					this.OnBasketAvgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceAvg", DbType="Decimal(18,0) NOT NULL")]
		public decimal PriceAvg
		{
			get
			{
				return this._PriceAvg;
			}
			set
			{
				if ((this._PriceAvg != value))
				{
					this.OnPriceAvgChanging(value);
					this.SendPropertyChanging();
					this._PriceAvg = value;
					this.SendPropertyChanged("PriceAvg");
					this.OnPriceAvgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustStatus", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CustStatus
		{
			get
			{
				return this._CustStatus;
			}
			set
			{
				if ((this._CustStatus != value))
				{
					this.OnCustStatusChanging(value);
					this.SendPropertyChanging();
					this._CustStatus = value;
					this.SendPropertyChanged("CustStatus");
					this.OnCustStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
